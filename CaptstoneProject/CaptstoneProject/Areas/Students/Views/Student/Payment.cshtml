@using CaptstoneProject.Models
@model CaptstoneProject.Models.AreaViewModel.RegistrationViewModel
@{
    ViewBag.Title = "Registration Checkout";
    var count = 1;
}
<style>
    table.table > thead > tr:first-child > td, table.table > thead > tr:first-child > th {
        text-align: center;
    }
</style>
<div class="content">
    <div class="container-default fadeInRight animate">
        <div class="panel panel-default">
            <div class="panel-title"><i class="fa fa-users"></i>Checkout</div>
            <div class="panel-body">
                <h2>Confirm payment</h2>
                <br />
                <div class="row">
                    <div class="col-md-9">
                        <h3>
                            Balance: @Model.StudentAccount.Balance.Value.ToString("#,###") VNĐ
                        </h3>
                    </div>
                    <div class="col-md-3">
                        <button id="btnBack" class="btn btn-primary margin-l-10" onclick="parent.history.back();">Back</button>
                        @if (Model.StudentAccount.Balance.Value < Model.TotalPrice)
                        {
                            <button id="btnPayment" class="btn btn-success pull-right" disabled>Checkout</button>
                        }
                        else
                        {
                            <button id="btnPayment" class="btn btn-success pull-right">Checkout</button>
                        }
                    </div>
                    <div class="col-md-12">
                        @if (Model.StudentAccount.Balance.Value < Model.TotalPrice)
                        {
                            <p style="color: red" class="pull-right">Your balance is not enough to perform this transaction</p>
                        }
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <table class="table dataTable table-bordered" id="registrationTable">
                            <thead>
                                <tr>
                                    <th>No.</th>
                                    <th>Registered Item</th>
                                    <th>Subject Name</th>
                                    <th>Registration Type</th>
                                    <th>Credit Value</th>
                                    <th>Price</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model.CurriculumRegistrationDetails.Count > 0)
                                {
                                    <tr>
                                        <td rowspan="@Model.CurriculumRegistrationDetails.Count" style="vertical-align: middle!important">@(count++)</td>
                                        <td rowspan="@Model.CurriculumRegistrationDetails.Count" style="vertical-align: middle!important">Curriculum Subject</td>
                                        <td>@Model.CurriculumRegistrationDetails.First().SubjectName</td>
                                        <td>@(((RegistrationType)@Model.CurriculumRegistrationDetails.First().RegisteredType).GetEnumDisplayName())</td>
                                        <td>@Model.CurriculumRegistrationDetails.First().CreditValue</td>
                                        <td rowspan="@Model.CurriculumRegistrationDetails.Count" style="vertical-align: middle!important">@Model.CurriculumTotalPrice.ToString("#,###") VNĐ</td>
                                    </tr>

                                    foreach (var registrationDetail in Model.CurriculumRegistrationDetails.Skip(1))
                                    {
                                        <tr>
                                            <td style="display: none"></td>
                                            <td style="display: none"></td>
                                            <td>@registrationDetail.SubjectName (@registrationDetail.SubjectCode)</td>
                                            <td>@(((RegistrationType)registrationDetail.RegisteredType).GetEnumDisplayName())</td>
                                            <td>@registrationDetail.CreditValue</td>
                                            <td style="display: none"></td>
                                        </tr>
                                    }
                                }

                                @foreach (var registrationDetail in Model.OtherRegistrationDetails)
                                {
                                    <tr>
                                        <td>@(count++)</td>
                                        <td>@registrationDetail.SubjectCode</td>
                                        <td>@registrationDetail.SubjectName</td>
                                        <td>@(((RegistrationType)registrationDetail.RegisteredType).GetEnumDisplayName())</td>
                                        <td>@registrationDetail.CreditValue</td>
                                        <td>@registrationDetail.TotalPrice.ToString("#,###") VNĐ</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <h4 class="pull-right">Total: @Model.TotalPrice.ToString("#,###") VNĐ</h4>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    $('#registrationTable').DataTable({
        searching: true,
        sorting: false
    });

    $('#btnPayment').click(function () {
        $.ajax({
            method: 'POST',
            url: '@Url.Action("SubmitPayment")',
            success: function (result) {
                if (result.success) {
                    verifyCode();
                }
            }
        });
    });

    function verifyCode(message) {
        var regex = new RegExp(/(0[/]\d+)/i);
        var noAttempt = message != null && regex.test(message);

        var contentString = noAttempt ? '' : '<div class="row"><div class="col-md-12"><input id="confirmationCode" class="form-control" value="" /></div></div>';
        contentString = message ? '<div><div class="row"><div class="col-md-12"><p style="color: red; font-size: small">' + message + '</p></div></div>' + contentString + '</div>' : contentString;
        var content = $(contentString);

        var buttons = null;

        if (!noAttempt) {
            buttons = {
                cancel: "Cancel transaction",
                confirm: {
                    text: "Verify code",
                    closeModal: false,
                    value: "verify"
                },
            }
        } else {
            buttons = {
                cancel: "Cancel transaction"
            }
        }

        swal({
            title: "Verification",
            text: "We've sent a confirmation code to your email.\nPlease enter it here to verify this transaction.",
            icon: "info",
            closeOnClickOutside: false,
            content: content[0],
            buttons: buttons,
        }).then(value => {
            switch (value) {
                case "verify":
                    return fetch("@Url.Action("ConfirmPayment")", {
                        method: "POST",
                        credentials: 'include',
                        headers: {
                            "Content-Type": "application/json"
                        },
                        body: JSON.stringify({
                            code: $('#confirmationCode').val()
                        })
                    });
                    break;
                default:
                    return Promise.reject('canceled');
            }
        }).then(result => {
            return result.json();
        }).then(json => {
            if (json.success) {
                swal({
                    title: "Success",
                    text: "Your transaction has been verified and is being processed.",
                    icon: "success",
                }).then(result => {

                });
            } else {
                switch (json.errorType) {
                    case @((int)JsonResultErrorType.Unauthorized), @((int)JsonResultErrorType.Expired):
                        return Promise.reject(json.message);
                    break;
                    case @((int)JsonResultErrorType.Failed):
                        verifyCode(json.message);
                    break;
                    default:
                        verifyCode(json.message);
                }
            }
        }).catch(err => {
            if (err == "canceled") {
                swal.stopLoading();
                swal.close();
            } else if (err) {
                swal("Invalid request!", err, "error");
            } else {
                swal.stopLoading();
                swal.close();
            }
        });
    }
</script>