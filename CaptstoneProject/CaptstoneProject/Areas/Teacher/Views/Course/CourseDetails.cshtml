@model CaptstoneProject.Models.AreaViewModel.CourseDetailsViewModel
@{
    ViewBag.Title = ViewBag.ClassName;
    var finals = Model.FinalCol;
    var isFinal = false;
}
<style>
    .course-detail-info {
        font-size: 14px;
        padding-left: 20px;
        padding-bottom: 15px;
    }

    .min-width-100 {
        min-width: 100px;
    }

    .text-center {
        text-align: center;
    }

    th {
        background-color: #399bff !important;
    }

    .toggle-handle {
        background-color: #b8d0e8;
    }

    .toggle.ios, .toggle-on.ios, .toggle-off.ios {
        border-radius: 20px;
        border: solid 0.5px #bbbbbb;
    }

        .toggle.ios .toggle-handle {
            border-radius: 20px;
        }
</style>
<div class="content">
    <!-- Start Container -->
    <div class="container-default animated fadeInRight" style="padding-bottom:10px; min-height:700px">
        <div class="panel panel-default">
            <div class="panel-title">
                <i class="fa fa-info-circle" style="color:green"></i> Course Details
                @if (Model.IsEditable)
                {
                    <div style="float:right">
                        <div>
                            <button class="btn-outline-success btn margin-5" type="button" id="submit-comp">Submit Marks</button>
                        </div>
                    </div>
                }
            </div>

            <div class="panel-body">
                <div class="course-detail-info">
                    <div class="row" style="margin-bottom:5px;">
                        <div class="col-md-2">
                            <label><b>Term:</b> @Model.Semester</label>
                        </div>
                        <div class="col-md-10">
                            <label><b>Subject:</b> @Model.SubName - @Model.SubCode</label>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-2">
                            <label><b>Class:</b> @ViewBag.ClassName</label>
                        </div>
                        <div class="col-md-10">
                            <label>
                                <b style="margin-right:5px">Status: </b>
                                 @switch (Model.StatusName)
                                {
                                    case "New":
                                        {
                                            <b class="col-md-2 p-2 status-gray">New</b>
                                            break;
                                        }
                                    case "InProgress":
                                        {
                                            <b class="col-md-2 p-2 status-green">In Progress</b>
                                            break;
                                        }
                                    case "Submitted":
                                        {
                                            <b class="col-md-2 p-2 status-blue">Submitted</b>
                                            break;
                                        }
                                    case "FirstPublish":
                                        {
                                            <b class="col-md-2 p-2 status-yellow">First Publish</b>
                                            break;
                                        }
                                    case "FinalPublish":
                                        {
                                            <b class="col-md-2 p-2 status-orange">Final Publish</b>
                                            break;
                                        }
                                    case "Closed":
                                        {
                                            <b class="col-md-2 p-2 status-red">Closed</b>
                                            break;
                                        }
                                    default:
                                        {
                                            <b class="col-md-2 p-2 status-black">Cancel</b>
                                            break;
                                        }
                                }
                            </label>
                        </div>
                    </div>
                </div>
                @if (Model.IsEditable)
                {
                    <div class="row">
                        <div class="offset-8 col-md-4">
                            <div class="pull-right">
                                <button class="btn-success btn" id="download-template-btn"><i class="fa fa-download"></i> Template</button>
                                <button class="btn-primary btn" id="import-mark-btn">Import Excel</button>
                                <button class="btn btn-primary hidden" id="submit-button">Submit file</button>
                                <input id="upload-file" class="hidden" type="file" name="upload-file" />
                                <div class="progress" style="display:none">
                                    <div id="upload-progress-bar" class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar"
                                         aria-valuenow="50" aria-valuemin="0" aria-valuemax="100" style="width:0%">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="col-md-5">
                            <form action="@Url.Action("EditSingleCourseComponent", "Course")">
                                <input type="text" hidden value="@Model.CourseId" name="courseId" />
                                <label>Mark: </label>
                                <select id="componentId" style="width:120px" name="componentId">
                                    @foreach (var item in ViewBag.Components)
                                    {
                                        <option value="@item.Id">
                                            @item.Name
                                        </option>
                                    }
                                </select>
                                <button type="submit" id="editComMark" class="btn btn-primary btn-sm" style="margin: 5px;">Edit </button>
                            </form>
                        </div>
                        <div class="col-md-8">
                            <p id="file-info" class="pull-right hidden" style="color: red;"><span style="text-decoration: underline;"></span> file has been selected</p>
                        </div>
                        <div class="col-md-1">
                            <a id="cancel-file" href="#" class="pull-right hidden">Cancel</a>
                        </div>
                    </div>
                    <br />
                }
                else
                {
                    <div class="row">
                        <div class="offset-8 col-md-4">
                            <div class="pull-right">
                                <button class="btn-success btn" id="download-template-btn"><i class="fa fa-download"></i> Export</button>
                            </div>
                        </div>
                    </div>
                    <br />
                }
                <div style="padding-left:15px">
                    <label class="checkbox-inline">
                        <input id="hide-final" type="checkbox" data-size="small" data-on="Show" data-off="Hide" checked data-toggle="toggle" data-onstyle="default" data-offstyle="outline" data-column="1" data-style="ios"> Final
                    </label>
                </div>
                <table id="mark-table" class="table display dataTable cell-border">
                    <thead>
                        <tr>
                            <th style="background-color:#d1601d !important">
                                #
                            </th>
                            <th style="background-color:#d1601d !important">
                                Login Name
                            </th>
                            <th style="background-color:#d1601d !important">
                                Student Code
                            </th>
                            @for (var i = 0; i < Model.ComponentNames.Count(); i++)
                            {
                                @*foreach (var k in finals)
                                {
                                    if (i == k - 3)
                                    {
                                        <th style="background-color:#105dac!important">
                                            @Model.ComponentNames[i]
                                        </th>
                                        isFinal = true;
                                        break;
                                    }
                                }
                                if (isFinal != true)
                                {*@
                                    <th>
                                        @Model.ComponentNames[i]
                                    </th>
                                    @*isFinal = false;
                                }*@

                            }
                            <th style="background-color:#d1601d !important">
                                Average
                            </th>
                            <th style="background-color:#d1601d !important">
                                Status
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 1; i <= Model.StudentInCourse.Count; i++)
                        {
                            <tr>
                                <td>
                                    @i
                                </td>
                                <td>
                                    @if (Model.IsEditable)
                                    {
                                        <a href="@Url.Action("EditMarks", "Course", new { studentCode = Model.StudentInCourse[i - 1].StudentCode, courseId = Model.CourseId })">@Model.StudentInCourse[i - 1].StudentName</a>
                                    }
                                    else
                                    {
                                        <div>@Model.StudentInCourse[i - 1].StudentName</div>
                                    }
                                </td>
                                <td>
                                    @Model.StudentInCourse[i - 1].StudentCode
                                </td>
                                @foreach (var mark in Model.StudentInCourse[i - 1].MarksComponent)
                                {
                                    if (mark.EdittedMark == null)
                                    {
                                        if (mark.Mark != null)
                                        {
                                            if (mark.Mark.Value == -1)
                                            {
                                                <td> - </td>
                                            }
                                            else
                                            {
                                                <td>
                                                    @mark.Mark.Value.ToString("0.00")
                                                </td>
                                            }
                                        }
                                        else
                                        {
                                            <td>
                                                -
                                            </td>
                                        }
                                    }
                                    else
                                    {
                                        if (mark.EdittedMark.Value == -1)
                                        {
                                            <td> - </td>
                                        }
                                        else
                                        {
                                            <td>
                                                <b style="color:red"> @mark.EdittedMark </b>
                                            </td>
                                        }
                                    }
                                }
                                @if (Model.StudentInCourse[i - 1].Average != "-1")
                                {
                                    <td>
                                        @Int32.Parse(Model.StudentInCourse[i - 1].Average).ToString("0.00")
                                    </td>
                                }
                                else
                                {
                                    <td>
                                        -
                                    </td>
                                }
                                <td>
                                    @Model.StudentInCourse[i - 1].StatusName
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<form class="hidden" method="post" id="template-request-form" action="@Url.Action("DownloadTemplate")">
    <input type="text" name="courseId" value="@Model.CourseId" />
</form>
<script>
    $('#download-template-btn').click(function () {
        $('#template-request-form').submit();
    });

    $('#import-mark-btn').click(function () {
        $('#upload-file').trigger("click");
    });

    $('#upload-file').on("change", function () {
        var fileName = this.files[0].name;
        $("#filename").html(fileName);

        if (fileName != null) {
            $('#import-mark-btn').addClass("hidden");
            $('#submit-button').removeClass("hidden");
            $('#cancel-file').removeClass("hidden");
            $('#file-info').removeClass("hidden");
            $('#file-info span').html(fileName);
        } else {
            $('#import-mark-btn').removeClass("hidden");
            $('#submit-button').addClass("hidden");
            $('#cancel-file').addClass("hidden");
            $('#file-info').addClass("hidden");
        }
    });

    $('#cancel-file').click(function () {
        $('#import-mark-btn').removeClass("hidden");
        $('#submit-button').addClass("hidden");
        $('#cancel-file').addClass("hidden");
        $('#file-info').addClass("hidden");
        $('.progress').css("display", "none");
    });

    $('#submit-button').on("click", function () {
        var file = $("#upload-file")[0].files[0];
        if (file.size > 20971520) {
            toastr.error('Max upload size is 20MB!');
        }
        else{
            var data = new FormData();
            data.append("courseId", @Model.CourseId);
            for (var i = 0; i < $("#upload-file")[0].files.length; i++) {
                data.append("file" + i, $("#upload-file")[0].files[i]);
            }
            $(".progress").show();
            $.ajax({
                type: "POST",
                url: '@Url.Action("UploadExcel")',
                contentType: false,
                processData: false,
                data: data,
                xhr: function() {
                    var settingXhr = $.ajaxSettings.xhr();
                    if (settingXhr.upload) {
                        // For handling the progress of the upload
                        settingXhr.upload.addEventListener('progress', function(e) {
                            if (e.lengthComputable) {
                                $('#upload-progress-bar').removeClass('progress-bar-danger');
                                var percent = Math.ceil(e.loaded/e.total*100);
                                $('#upload-progress-bar').attr('aria-valuenow', percent).css('width',percent+'%');
                                $('#upload-progress-bar').attr('aria-valuemax', 100);
                                $('#upload-progress-bar').html(percent+"%");
                                if(percent==100){
                                    $('#upload-progress-bar').html("Processing...");
                                }
                            }
                        } , false);
                    }
                    return settingXhr;
                },
                success: function (result) {
                    if (result.success) {
                        $('#upload-progress-bar').html("Completed!");
                        toastr.success(result.message + "\nNumber of failed record: " + result.failRecordCount);
                        setTimeout(function () {
                            window.location.reload();
                        }, 2000);
                    } else {
                        toastr.error(result.message);
                        $('#upload-progress-bar').html("Operation failed!");
                        $('#upload-progress-bar').addClass('progress-bar-danger');
                    }
                },
                error: function (result) {
                    if (result.responseJSON != null) {
                        toastr.error(result.responseJSON.message + "\n" + result.responseJSON.error);
                    } else {
                        toastr.error(result.statusText + "\nError: " + result.status);
                    }
                    $('#upload-progress-bar').html("Operation failed!");
                    $('#upload-progress-bar').addClass('progress-bar-danger');
                }
            });
        }
    });

    $('#submit-comp').click(function(){
        swal({
            title: "Are you sure?",
            text: "You won't be able to edit marks anymore!",
            type: "info",
            showCancelButton: true,
            confirmButtonClass: "btn-primary",
            confirmButtonText: "Yes, submit it!",
            closeOnConfirm: false
        },
    function(){
        $.ajax({
            type: "POST",
            url: '@Url.Action("ChangeToSubmit")',
            data: { courseId: @Model.CourseId,},
            success: function (result) {
                if (result.success) {
                    swal("Success!", "Your marks have been submitted!", "success");
                    //toastr.success(result.message);
                    window.location.reload();

                } else {
                    toastr.error(result.message);
                }
            },
            error: function (xhr, status, p3, p4) {
                var err = "Error " + " " + status + " " + p3 + " " + p4;
                toastr.error(err);
            }
        });

    });
    });

    $(document).ready(function () {
        $("#componentId").selectpicker();
        $('#hide-final').bootstrapToggle();
        var table = $('#mark-table').DataTable({
            searching: true,
            scrollY: "500px",
            scrollCollapse: true,
            language: {
                searchPlaceholder: "Search students..."
            },
            columnDefs: [
                {
                    targets: [1,2],
                    className: "min-width-100",
                    searchable:true,
                },
                {
                    targets: '_all',
                    searchable:false,
                    className:"text-center",
                },
            ],
            scrollX:true,
            fixedColumns: {
                leftColumns: 3,
                rightColumns:2,
            },
            lengthMenu: [30, 50]
        });
        $("#hide-final").on( 'change', function (e) {
            // Get the column API object
            var finals= @Html.Raw(Json.Encode(Model.FinalCol));
            for(var i =0;i<finals.length;i++){
                var column = table.column(finals[i]);

                // Toggle the visibility
                column.visible( ! column.visible() );
            }
        } );
    });
</script>