@model CaptstoneProject.Models.AreaViewModel.StudentViewModel
@{
    ViewBag.Title = "CustomerDetailsMaterial";
}

<input id="studentId" value="@this.Model.Id" hidden />
<div class="container" style="width: calc(100%)">

    @*<div class="card-header">
            <small>Address: @this.Model.Address</small>
            <hr />
        </div>*@
    @*<div class="pm-overview c-overflow mCustomScrollbar _mCS_3 mCS-autoHide" style="overflow: visible;">
        <div id="mCSB_3" class="mCustomScrollBox mCS-minimal-dark mCSB_vertical_horizontal mCSB_outside" tabindex="0">
            <div id="mCSB_3_container" class="mCSB_container mCS_x_hidden mCS_no_scrollbar_x" style="position: relative; top: 0px; left: 0px; width: 100%;" dir="ltr">
    *@
    <div class="row">
        <div class="col-md-12 p-x-0 p-b-0">
            <div class="row">
                <div class="col-md-4" style="padding-left: 0px; padding-right:6px; padding-bottom:10px">
                    <div class="bgm-teal" style="min-height:135px; border-radius:5px;">
                        <div class="clearfix">
                            @*<a title='Chỉnh sửa' class='btn btn-lg btn-primary pull-right' href='@Url.Action("Edit")/@Model.CustomerID'><i class='glyphicon glyphicon-pencil'></i></a>*@
                            @*<div class="pmo-block card-padding col-md-12 pmo-contact hidden-xs pull-left">
                            *@
                            <h3 style="color: white; padding-left:10px;">Khách hàng: @Model.Name </h3>
                            <ul style="columns: 2; list-style-type:none; -moz-column-count: 2;">
                               
                                
                                @if (!string.IsNullOrWhiteSpace(this.Model.Email))
                                {
                                    <li class="custom-break" style="color: white" title="Email"><i class="zmdi zmdi-email"></i> @this.Model.Email</li>
                                }
                                
                            </ul>
                        </div>
                    </div>
                </div>
                <div class="col-md-4" style="padding-left: 3px; padding-right:3px;">
                    <div style="border-radius:5px;min-height:135px; background-color:rgb(234, 118, 73);">
                        <div id="accountDetailPanel" class="clearfix">
                            <h3 id="dAccName" style="color: white; padding-left:10px;">Thông tin tài khoản</h3>
                            <div class="col-md-12 row">
                                <div>
                                    <ul style="columns: 2; list-style-type:none; -moz-column-count: 2;">
                                        <li style="color: white" title="Thẻ thanh toán"><i class="zmdi zmdi-card-travel"></i> Tài khoản thanh toán: </li>
                                        <li style="color: white" title="Thẻ sản phẩm"><i class="zmdi zmdi-card-giftcard"></i> Tài khoản sản phẩm: </li>
                                        <li style="color: white" title="Thẻ tích điểm"><i class="zmdi zmdi-card-membership"></i> Tài khoản tích điểm: </li>
                                        <li style="color: white" title="Thẻ không xác định"><i class="zmdi zmdi-card-sim"></i> Tài khoản không xác định: </li>

                                    </ul>
                                </div>
                                <div class="pull-right row">
                                  
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
                <div class="col-md-4" style="padding-left: 6px; padding-right:0px;">
                    <div style="border-radius:5px;min-height:135px; background-color:rgb(197, 84, 131);">
                        <div id="accountDetailPanel" class="clearfix">
                                <h3 id="dAccName" style="color: white; padding-left:10px;">Bạn hiện có:  thẻ</h3>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-12 p-x-0">

            <div class="row">
                <div class="col-md-4 text-center" style="padding-left:0px; padding-right:6px; padding-bottom:10px">
                    <div class="bgm-green" style="border-radius:5px">
                        <div class="clearfix">
                            <div class="count">
                                <h3 id="1stPanel-title" class="m-b-10 detailPanelTitle">Tổng số đơn hàng</h3>
                                <h4 id="1stPanel-info" style="color:white;"><i class="fa fa-shopping-bag detailPanelIcon"></i></h4> <h4 style="color:white;"><span class="detailPanelInfo"></span></h4>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-4 text-center" style="padding-left:3px; padding-right:3px; padding-bottom:10px;">
                    <div class="bgm-amber" style="border-radius:5px">
                        <div class="clearfix">
                            <div class="count">
                                <h3 id="2ndPanel-title" class="m-b-10 detailPanelTitle">Tổng tiền đã chi</h3>
                                <h4 id="2ndPanel-info" style="color:white"><i class="fa fa-money detailPanelIcon"></i></h4> <h4 style="color:white"><span class="detailPanelInfo"></span></h4>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-4 text-center" style="padding-left:6px; padding-right:0px; padding-bottom:10px;">
                    <div class="bgm-cyan" style="border-radius:5px">
                        <div class="clearfix">
                            <div class="count">
                                <h3 id="3rdPanel-title" class="m-b-10 detailPanelTitle">Tổng số lần đến</h3>
                                <h4 id="3rdPanel-info" style="color:white"><i class="fa fa-user-plus detailPanelIcon"></i></h4> 
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="card">
                    <div class="card-body card-padding">

                        <ul id="TabList" class="tab-nav tn-justified" style="overflow: hidden; width: 100%">
                            <li class="active waves-effect"><a data-toggle="tab" href="#denCuaHang" onclick="changePanelContent(1)">Lịch sử đến cửa hàng</a></li>
                            <li class="waves-effect"><a data-toggle="tab" id="boughtHistory" href="#muaHang" onclick="changePanelContent(1)">Lịch sử mua hàng</a></li>
                            @*<li class="waves-effect"><a data-toggle="tab" href="#transactions" onclick="changePanelContent(2)">Danh sách giao dịch</a></li>*@
                            @*<li class="waves-effect"><a data-toggle="tab" href="#transactions" onclick="changePanelContent(2)">Lịch sử giao dịch</a></li>*@
                            @*<li class="waves-effect"><a data-toggle="tab" href="#taiKhoan" onclick="changePanelContent(2)">Danh sách tài khoản</a></li>*@
                            <li class="waves-effect"><a data-toggle="tab" href="#cards" onclick="changePanelContent(2)">Danh sách thẻ và tài khoản</a></li>
                        </ul>

                        <div class="tab-content">
                            <div id="denCuaHang" class="tab-pane fade in active">
                                <div class="row">
                                    <form id="form-create-session" class="form-inline col-md-12 m-y-20">
                                        <div class="input-group pull-right">
                                            <div class="dateTime width230 pull-right">
                                                <div class="fg-line m-t-5">
                                                    <div id="reportrange">
                                                        <input id="date-string" readonly class="form-control text-center">
                                                        <a class="myCelenderA" id=""><i class="fa fa-calendar"></i></a>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <input type="text" id="sTime" name="startTime" placeholder="Chọn giờ bắt đầu" hidden="hidden" />
                                        <input type="text" id="eTime" name="endTime" placeholder="Chọn giờ kết thúc" hidden="hidden" />
                                    </form>
                                </div>

                                <table id="customer-store-table" class="table-condensed table-bordered table-striped table-hover">
                                    <thead>
                                        <tr style="background-color: #4caf50; color: white;">
                                            <th>
                                                <label>STT</label>
                                            </th>
                                            <th>
                                                <label>Cửa hàng</label>
                                            </th>
                                            <th>
                                                <label>Số hóa đơn</label>
                                            </th>
                                            <th>
                                                <label>Tổng giá trị</label>
                                            </th>
                                            <th>
                                                <label>Giá trị trung bình</label>
                                            </th>
                                            <th>
                                                <label>Tần suất<br>(Hóa đơn/ngày)</label>
                                            </th>
                                        </tr>
                                    </thead>
                                    <tbody></tbody>
                                </table>
                            </div>

                            <div id="muaHang" class="tab-pane fade">
                                <div class="">

                                <div class="col-md-4 pull-left m-y-20" style="padding: 0px;">
                                    <strong>Cửa hàng:</strong>
                                    <select class="selectpicker col-md-8" id="selectedStore" onchange="RefreshCustomerProductTable()">
                                        <option value="0" selected>Tất cả</option>
                                    </select>
                                </div>
                                <div class="col-md-8 m-0 p-0">
                                    <form id="form-create-session2" class="form-inline col-md-12 m-y-20 p-0">
                                        <div class="input-group pull-right">
                                            <div class="dateTime width230 pull-right">
                                                <div class="fg-line m-t-5">
                                                    <div id="reportrange2">
                                                        <input id="date-string2" readonly class="form-control text-center">
                                                        <a class="myCelenderA" id=""><i class="fa fa-calendar"></i></a>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <input type="text" id="sTime2" name="startTime" placeholder="Chọn giờ bắt đầu" hidden="hidden" />
                                        <input type="text" id="eTime2" name="endTime" placeholder="Chọn giờ kết thúc" hidden="hidden" />
                                    </form>
                                </div>
                                </div>
                                
                                <table id="customer-product-table" class="table-condensed table-bordered table-striped table-hover">
                                    <thead>
                                        <tr style="background-color: #4caf50; color: white;">
                                            <th>
                                                <label class="">STT</label>
                                            </th>
                                            <th>
                                                <label class="">Mã hóa đơn</label>
                                            </th>
                                            <th>
                                                <label class="">Số lượng</label>
                                            </th>
                                            <th>
                                                <label class="">Thanh toán</label>
                                            </th>
                                            <th>
                                                <label class="">Thời gian</label>
                                            </th>
                                            <th>
                                                <label class="">Loại hóa đơn</label>
                                            </th>
                                            <th>
                                                <label class="">Cửa hàng</label>
                                            </th>
                                            @*<th>
                                                    <label class="">Tình trạng</label>
                                                </th>*@
                                            <th>
                                                <label class="">Cashier</label>
                                            </th>
                                            <th>
                                                <label class="">Chi tiết</label>
                                            </th>
                                        </tr>
                                    </thead>
                                    <tbody></tbody>
                                </table>
                            </div>

                            <div id="taiKhoan" class="tab-pane fade">
                                <div class="col-md-8" style="height: 50px">
                                    <div class="col-md-5 pull-left" style="padding: 0px;">
                                        <strong>Mode: </strong>
                                        <select class="selectpicker col-md-5" id="selectAccountMode" onchange="ChangeAccountModeSelect()">
                                            <option value="0" selected>Mã thẻ</option>
                                            <option value="1">Loại thẻ</option>
                                        </select>
                                    </div>
                                    <div class="col-md-7" style="padding: 0px;">
                                        @*<select class="form-control col-md-8" id="selectModeItem" onchange="ChangeModeItemSelect()">
                                                <option value="0">Xem tất cả</option>
                                            </select>*@
                                        <button type="button" id="btn-selectModeItem" class="btn btn-primary dropdown-toggle" data-toggle="dropdown">
                                            <span class="caret"></span>
                                        </button>
                                        <ul class="dropdown-menu" style="overflow-y : scroll; max-height: 150px; top:32px" id="selectModeList">
                                            <li value="0">Xem tất cả</li>
                                        </ul>
                                        <input value="0" id="selectModeItem" hidden />
                                    </div>
                                </div>

                                <div class="col-md-4" style="height: 50px;">
                                    @*<a id="showCreateAccount" href="@Url.Action("Create", "Account")/@Model.CustomerID" data-toggle='modal' class='btn btn-sm btn-primary pull-right'><i class='glyphicon glyphicon-plus'></i> Thêm tài khoản</a>*@
                                </div>
                                <div>
                                    <table id="customer-account-table" class="table-condensed table-bordered table-striped table-hover">
                                        <thead>
                                            <tr style="background-color: #4caf50; color: white;">
                                                <th>
                                                    <label>STT</label>
                                                </th>
                                                <th>
                                                    <label>Mã tài khoản</label>
                                                </th>
                                                <th>
                                                    <label>Tên tài khoản</label>
                                                </th>
                                                <th>
                                                    <label>Loại tài khoản</label>
                                                </th>
                                                <th>
                                                    <label>Mã thẻ</label>
                                                </th>
                                                <th>
                                                    <label>Kích hoạt</label>
                                                </th>
                                                <th>
                                                    <label>Tùy chọn</label>
                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody></tbody>
                                    </table>
                                </div>
                            </div>

                            @*<div id="denCuaHang" class="tab-pane fade in active">

                                    <div class="row">
                                        <form id="form-create-session" class="form-inline col-md-12 m-y-20">
                                            <div class="input-group pull-right">
                                                <div class="dateTime width230 pull-right">
                                                    <div class="fg-line m-t-5">
                                                        <div id="reportrange">
                                                            <input id="date-string" readonly class="form-control text-center">
                                                            <a class="myCelenderA" id=""><i class="fa fa-calendar"></i></a>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <input type="text" id="sTime" name="startTime" placeholder="Chọn giờ bắt đầu" hidden="hidden" />
                                            <input type="text" id="eTime" name="endTime" placeholder="Chọn giờ kết thúc" hidden="hidden" />
                                        </form>
                                    </div>

                                    <table id="customer-store-table" class="table-condensed table-bordered table-striped table-hover">
                                        <thead>
                                            <tr style="background-color: #4caf50; color: white;">
                                                <th>
                                                    <strong>STT</strong>
                                                </th>
                                                <th>
                                                    <strong>Cửa hàng</strong>
                                                </th>
                                                <th>
                                                    <strong>Số hóa đơn</strong>
                                                </th>
                                                <th>
                                                    <strong>Tổng giá trị</strong>
                                                </th>
                                                <th>
                                                    <strong>Giá trị trung bình</strong>
                                                </th>
                                                <th>
                                                    <strong>Tần suất<br>(Hóa đơn/ngày)</strong>
                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody></tbody>
                                    </table>
                                </div>*@

                            <div id="cards" class="tab-pane fade in">
                                <table id="cards-table" class="table-condensed table-bordered table-striped table-hover" style="width: 100%">
                                    <thead>
                                        <tr style="background-color: #4caf50; color: white;">
                                            <th>
                                                <label>STT</label>
                                            </th>
                                            <th>
                                                <label>Mã thẻ</label>
                                            </th>
                                            <th>
                                                <label>Loại thẻ</label>
                                            </th>
                                            <th>
                                                <label>Cấp độ</label>
                                            </th>
                                            <th>
                                                <label>Trạng thái</label>
                                            </th>
                                            <th>
                                                <label>Ngày tạo</label>
                                            </th>
                                            <th>
                                                <label>Tùy chọn</label>
                                            </th>
                                        </tr>
                                    </thead>
                                    <tbody></tbody>
                                </table>
                            </div>

                           
                        </div>
                        <div class="modal-footer" style="padding:initial">
                            <a href="@this.Url.Action("Index")">
                                <div id="create-advertising" type="button" class="btn btn-primary pull-left waves-effect">
                                    <i class="left-icon fa fa-arrow-circle-left"></i> Quay về
                                </div>
                            </a>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>

    <div class="modal fade " tabindex="-1" id="order-detail-report-modal" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-large">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <h4 class="modal-title">Chi tiết hóa đơn</h4>
                </div>
                <div class="modal-body">
                    <div class="clearfix" style="margin-bottom: 20px;">
                        <div class="col-md-6 float-left">
                            <label class="col-md-5 no-padding text-bold float-left" style="font-weight:bold">Tên khách hàng:</label>
                            <label class="control-label float-left" data-role="customer-name"></label>
                            <br />
                            <div class="col-md-12 no-padding" id="delivery">
                                <label class="col-md-5 no-padding control-label text-bold float-left" style="font-weight:bold">Địa chỉ giao:</label>
                                <label class="control-label float-left" data-role="delivery-address"></label>
                                <br />
                            </div>
                            <label class="col-md-5 no-padding control-label text-bold float-left" style="font-weight:bold">Điện thoại:</label>
                            <label class="control-label float-left" data-role="customer-phone"></label>
                            <br />
                            <label class="col-md-5 no-padding control-label text-bold float-left" style="font-weight:bold">Cashier:</label>
                            <label class="control-label float-left" data-role="cashier">
                            </label>
                            <br />
                            <label class="col-md-5 no-padding control-label text-bold float-left" style="font-weight:bold">Cửa hàng:</label>
                            <label class="control-label float-left" data-role="store">
                            </label>
                            <br />
                            <label class="col-md-5 no-padding control-label text-bold float-left" style="font-weight:bold">Thời gian đặt:</label>
                            <label class="control-label float-left " data-role="order-time"></label>
                            <br />
                            <label class="col-md-5 no-padding control-label text-bold float-left" style="font-weight:bold">Phân loại:</label>
                            <label class="control-label float-left" data-role="status">
                            </label>
                        </div>
                        <div class="col-md-6 float-right">
                            <label class="col-md-5 no-padding control-label text-bold float-left" style="font-weight:bold">Mã hóa đơn:</label>
                            <label class="control-label float-left" data-role="invoiceid">
                            </label>
                            <br />
                            <label class="col-md-5 no-padding control-label text-bold float-left" style="font-weight:bold">Tổng cộng:</label>
                            <label class="control-label float-left" data-role="total-amount">
                            </label>
                            <br />
                            <label class="col-md-5 no-padding control-label text-bold float-left" style="font-weight:bold">Giảm giá:</label>
                            <label class="control-label float-left" data-role="discount">
                            </label>
                            <br />
                            <label class="col-md-5 no-padding control-label text-bold float-left" style="font-weight:bold">Thanh toán:</label>
                            <label class="control-label float-left" data-role="final-amount">
                            </label>
                            <br />
                            <label class="control-label text-bold float-left" style="font-weight:bold">Ghi chú:</label>
                            <label class="control-label float-left" data-role="notes">
                            </label>

                        </div>
                    </div>
                    <div class="col-md-5 col-md-offset-7">
                        <button type="submit" id="exportEx" class="btn btn-primary btn-sm pull-right">
                            <i class="fa fa-download"></i>
                            Xuất ra file Excel
                        </button>
                    </div>
                    <table class="table table-bordered table-hover" id="order-report-detail-table">
                        <thead>
                            <tr>
                                <th>STT</th>
                                <th>Tên sản phẩm</th>
                                <th>Giá sản phẩm</th>
                                <th>Số lượng</th>
                                <th>Tình trạng</th>
                                <th>Giảm giá</th>
                                <th>Thanh toán</th>
                                @*<th>RentID</th>*@
                            </tr>
                        </thead>
                        <tbody></tbody>
                        <tfoot>
                            <tr>
                                <th style="text-align:left" colspan="5"></th>
                                <th></th>
                                <th></th>
                            </tr>
                        </tfoot>
                    </table>
                    <form class="hidden" id="formDetailReportExcel" action="@Url.Action("ExportOrderTableToExcel","Customer")">
                        <input type="hidden" name="_id" id="RentID" value="" />
                        <input type="hidden" name="total" id="total" value="" />
                        <input type="hidden" name="final" id="final" value="" />
                        <input type="hidden" name="discount" id="discount" value="" />
                    </form>
                </div>
                @*<div class="modal-footer">
                        <a class="btn btn-success" id="order-detail-submit">Lưu thay đổi</a>
                        <a class="btn btn-default close" data-dismiss="modal" aria-label="Close">Thoát</a>
                    </div>*@
            </div>
        </div>
    </div>

</div>
<div id="accountDetailModal" class="modal fade">
    <div id="modalAccount" class="modal-dialog" style="width: 700px">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h3 style="color:green" id="accountDetailModalTitle"></h3>
            </div>
            <div class="modal-body">
                <div class="form-horizontal">
                    @*<div class="form-group">
                            <label class="col-sm-3 control-label">
                                Mã nhóm:
                            </label>
                            <div class="col-sm-9">
                              <input id="editGroupCode" type="text" class="form-control" />
                            </div>
                        </div>*@
                    <div class="form-group">
                        <label class="col-sm-3 control-label">
                            <strong>
                                Mã tài khoản:
                            </strong>
                        </label>
                        <div class="col-sm-9">
                            <input id="accountDetailCode" required type="text" class="form-control" readonly />
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-3 control-label">
                            <strong>
                                Tên tài khoản:
                            </strong>
                        </label>
                        <div class="col-sm-9">
                            <input id="accountDetailName" required type="text" class="form-control" readonly />
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-3 control-label">
                            <strong>
                                Thẻ:
                            </strong>
                        </label>
                        <div class="col-sm-9">
                            <input id="accountDetailCard" required type="text" class="form-control" readonly />
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-3 control-label">
                            <strong>
                                Loại tài khoản:
                            </strong>
                        </label>
                        <div class="col-sm-9">
                            <input id="accountDetailType" required type="text" class="form-control" readonly />
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-3 control-label">
                            <strong>
                                Kích hoạt:
                            </strong>
                        </label>
                        <div class="col-sm-9">
                            <input id="accountDetailActive" required type="text" class="form-control" readonly />
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-3 control-label">
                            <strong>
                                Ngày hết hạn:
                            </strong>
                        </label>
                        <div class="col-sm-9">
                            <input id="accountDetailFD" required type="text" class="form-control" readonly />
                        </div>
                    </div>
                    <div class="form-group" id="productInput" style="display:none">
                        <label class="col-sm-3 control-label">
                            <strong>
                                Sản phẩm:
                            </strong>
                        </label>
                        <div class="col-sm-9">
                            <input id="accountDetailProduct" required type="text" class="form-control" readonly />
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-3 control-label" id="balanceLabel">
                            Số lượng sản phẩm/Số tiền/Số điểm:
                        </label>
                        <div class="col-sm-9">
                            <input id="accountDetailBalance" required type="text" class="form-control" readonly />
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
            </div>
        </div>
    </div>
</div>


@*
            </div>
        </div>
        <div id="mCSB_3_scrollbar_vertical" class="mCSB_scrollTools mCSB_3_scrollbar mCS-minimal-dark mCSB_scrollTools_vertical" style="display: block;">
            <div class="mCSB_draggerContainer">
                <div id="mCSB_3_dragger_vertical" class="mCSB_dragger" style="position: absolute; min-height: 50px; height: 587px; top: 0px; display: block; max-height: 695px;" oncontextmenu="return false;"><div class="mCSB_dragger_bar" style="line-height: 50px;"></div></div><div class="mCSB_draggerRail"></div>
            </div>
        </div><div id="mCSB_3_scrollbar_horizontal" class="mCSB_scrollTools mCSB_3_scrollbar mCS-minimal-dark mCSB_scrollTools_horizontal" style="display: none;">
            <div class="mCSB_draggerContainer">
                <div id="mCSB_3_dragger_horizontal" class="mCSB_dragger" style="position: absolute; min-width: 50px; width: 0px; left: 0px;" oncontextmenu="return false;"><div class="mCSB_dragger_bar"></div></div><div class="mCSB_draggerRail"></div>
            </div>
        </div>
    </div>*@

<div id="createTransactionPanel" class="modal fade"></div>
<div id="editTransactionPanel" class="modal fade"></div>
<div id="createAccountPanel" class="modal fade"></div>
<div id="editAccountPanel" class="modal fade"></div>

<!--Modal Membership Card-->
<div class="modal fade in" id="modal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div id="modalContent"></div>
        </div>
    </div>
</div>

<!--Modal Add Balance-->
<div class="modal fade" id="addBalanceModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div id="addBalanceModalContent"></div>
        </div>
    </div>
</div>

@*@Html.Raw(TempData["msg"])*@
<script>
    var totalamount = 0;
    var finalomount = 0;
    var totaldiscount = 0;
    var table = null;

    //Date rangepicker for third tab
    function cb3(start, end, label) {
        var startTime = start.format("DD/MM/YYYY"),
            endTime = end.format("DD/MM/YYYY"),
            dateString = "(" + startTime + (startTime == endTime ? "" : " - " + endTime) + ")";

        if (label != "Tùy chọn") {
            $('#date-string-tab3').val(label);
        } else {
            $("#date-string-tab3").val(dateString);
        }

        $("#FromDateStr-tab3").val(start.format("YYYY/MM/DD"));
        $("#ToDateStr-tab3").val(end.format("YYYY/MM/DD"));

    };
    $(document).ready(function () {
        $('.selectpicker').selectpicker({
            size: 10,
            liveSearch: true,
        });

        //date rangepicker for third tab
        $('#reportrange-tab3').daterangepicker({
            "opens": "left",
            "maxDate": moment().format("DD/MM/YYYY"),
            locale: {
                format: 'DD/MM/YYYY'
            },
            ranges: {
                'Tháng này': [moment().startOf('month'), moment().endOf('month')],
                'Tháng trước': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
            },
        }, cb3);

        cb3(moment(), moment(), "Hôm nay");
        $('#date-string-tab3').click(function () {
            $('#reportrange-tab3').click();
        })

        //RefresTransactionTable();
        $('#reportrange-tab3').on("hide.daterangepicker", function(){
            var oTable = $("#voucher-table").dataTable();
            oTable._fnPageChange(0);
            oTable._fnAjaxUpdate();
            //oTable.api().ajax.reload();
            //alert("gg");
        })


        setupDaterangepicker();

        InitDefaultAccDetail();

        //Init customer-store table

        initFirstTable();
        //InitCustomerStoreDatatable();

        //RefreshCustomerStoreTable();

        //Init customer-product-table
        
        //InitCustomerProductDatatable();
        //RefreshCustomerProductTable();

        //loadTransactionOverview();
        loadStoreOverview();
        ChangeAccountModeSelect();
        InitCustomerAccountDatatable();

        InitCardsTable();

        //InitTransactionDatatable();
        //RefresTransactionTable();

        $('createAccountPanel').on('hidden.bs.modal', function() {
            $(this).html('');
        });

        $('editAccountPanel').on('hidden.bs.modal', function() {
            $(this).html('');
        });

        //$('[name="filterCard"]').change(function (e) {
        //    loadTracsactionAccountCombobox();
        //});
    });

    function InitCardsTable() {
        $.ajax({
            type: 'GET',
            url: '@Url.Action("InitCardsDatatable", "MembershipCard")',
            data: { studentId: '@Model.Id' },
            success: function (result) {
                if (result.success) {
                    if (table != null) table.destroy();
                    table = $("#cards-table").DataTable({
                        "data": result.data,
                        "bSort": false,
                        "language": {
                            "sSearch": "Tìm kiếm:",
                            "sSearchPlaceholder": "Mã thẻ",
                            "sZeroRecords": "Không có dữ liệu phù hợp",
                            "sInfo": "Hiển thị từ _START_ đến _END_ trên tổng số _TOTAL_ dòng",
                            "sEmptyTable": "Không có dữ liệu",
                            "sInfoFiltered": " - lọc ra từ _MAX_ dòng",
                            "sLengthMenu": "Hiển thị _MENU_ dòng",
                            "sProcessing": "Đang xử lý...",
                            "sInfoEmpty": "Không có dữ liệu",
                            "oPaginate": {
                                "sNext": "<i class='fa fa-chevron-right'></i>",
                                "sPrevious": "<i class='fa fa-chevron-left'></i>"
                            }
                        },
                        "columnDefs": [
                             {
                                 "aTargets": [0, 1, 2, 3, 4, 5, 6],
                                 "sClass": "text-center"
                             },
                             {
                                 "render": function (data, type, row) {
                                     //return "<button class='btn btn-warning' title='Danh sách giao dịch' onclick='Transactioncard(\"" + data + "\")'><i class='glyphicon glyphicon-edit'></i></button>"
                                     return "<button class='btn btn-warning' title='Danh sách giao dịch' onclick='Transactioncard(\"" + data + "\")'><i class='glyphicon glyphicon-edit'></i></button>"
                                        + " <button class='btn btn-primary' title='Danh sách tài khoản' onclick='Detailcard(\"" + data + "\")'><i class='glyphicon glyphicon-eye-open'></i></button>"
                                        + " <button class='btn btn-danger' title='Xóa thẻ' onclick='Deletecard(\"" + data + "\")'><i class='glyphicon glyphicon-trash'></i></button>";
                                 },
                                 "className": "dt-center",
                                 "targets": 6
                             },
                             {
                                 "aTargets": [0, 5],
                                 "sClass": "text-center"
                             },
                        ]
                    });
                } else {
                    ShowAlert(result.error, 1);
                }
            }
        });
    }

    function Transactioncard(id) {
        var url = "@Url.Action("TransactionDetail", "Transaction")\/" + id + "?studentId=" + @Model.Id;
        window.open(url,'_blank');
    }

    function Detailcard(id) {
        $.ajax({
            type: 'GET',
            url: '@Url.Action("Detail", "MembershipCard")',
            data: { id: id },
            success: function (result) {
                $('#modalContent').html(result);
                $('#modal').modal('show');
            },
            error: function () {
                ShowMessage("Dynamic content load failed.", 1);
            }
        });
    }

    function Deletecard(id) {
        swal({
            title: "Xóa thẻ",
            text: "Bạn có chắc muốn xóa thẻ không?",
            type: "warning",
            showCancelButton: true,
            closeOnConfirm: false,
            showLoaderOnConfirm: true,
        }, function(){
            $.ajax({
                type: 'POST',
                url: '@Url.Action("DeleteMembershipcard", "MembershipCard")',
                data: { id: id },
                success: function (result) {
                    if (result.success) {
                        InitCardsTable();
                        swal("Thành công!", "Bạn đã xóa thẻ thành công!", "success");
                    } else {
                        ShowAlert(result.error, 1);
                    }
                }
            });
        });
    }

    //Daterangepicker for first tab
    function cb(start, end, label) {
        var startTime = start.format("DD/MM/YYYY"),
            endTime = end.format("DD/MM/YYYY"),
            dateString = "(" + startTime + (startTime == endTime ? "" : " - " + endTime) + ")";

        if (label != "Tùy chọn") {
            $('#date-string').val(label);
        } else {
            $("#date-string").val(dateString);
        }

        $("#sTime").val(startTime);
        $("#eTime").val(endTime);
        $("#dateRange").html(dateString);

        initFirstTable();
    }

    //Daterangepicker for second tab
    function cb2(start, end, label) {
        var startTime = start.format("DD/MM/YYYY"),
            endTime = end.format("DD/MM/YYYY"),
            dateString = "(" + startTime + (startTime == endTime ? "" : " - " + endTime) + ")";

        if (label != "Tùy chọn") {
            $('#date-string2').val(label);
        } else {
            $("#date-string2").val(dateString);
        }

        $("#sTime2").val(startTime);
        $("#eTime2").val(endTime);
        $("#dateRange2").html(dateString);

        InitCustomerProductDatatable();
        RefreshCustomerProductTable();
    }

    function setupDaterangepicker() {
        cb(moment().startOf('month'), moment(), "Tháng này");
        $('#reportrange').daterangepicker({
            "opens": "left",
            "maxDate": moment(),
            locale: {
                format: 'DD/MM/YYYY'
            },
            ranges: {
                'Tuần này': [moment().startOf('week'), moment().endOf('week')],
                'Tuần trước': [moment().subtract(1, 'week').startOf('week'), moment().subtract(1, 'week').endOf('week')],
                'Tháng này': [moment().startOf('month'), moment().endOf('month')],
                'Tháng trước': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
            }
        }, cb);
    }
    //End dayrangepicker setting for first tab

    @*function loadTracsactionAccountCombobox() {
        $.ajax({
            type: 'GET',
            url: '@Url.Action("GetAccountsWithFilter", "Account")',
            data: {
                id : '@Model.CustomerID',
                filterCard : $('input[name=filterCard]:checked').val()
            },
            success: function (result) {
                if (result.success) {
                    $('#selectedAccount').html("");
                    var content = "";
                    if (result.accountList.length > 0) {
                        $('#selectedAccount').html("");
                        content += "<option value='0' selected>Tất cả tài khoản</option>";
                        for (var i = 0; i < result.accountList.length; ++i) {
                            content += "<option value='" + result.accountList[i].Value + "'>" + result.accountList[i].Text + "</option>";
                        }
                    } else {
                        content += "<option value='0'>Không có tài khoản</option>";
                    }
                    $('#selectedAccount').html(content);
                    $('#selectedAccount').selectpicker('refresh');
                } else {
                    ShowMessage("Có lỗi xảy ra, vui lòng thử lại.", 1);
                }
            },
        });
    }*@

    function showMembershipCardModal() {
        var data = $('#cardList').val();
        $.ajax({
            type: 'GET',
            url: '@Url.Action("Detail", "MembershipCard")',
            data: { id : data },
            success: function (result) {
                $('#membershipCardDetailContent').html(result);
                $('#membershipCardDetail').modal('show');
            },
            error: function () {
                ShowMessage("Dynamic content load failed.", 1);
            }
        });
    }

    function showLevelUpModal(id) {
        $.ajax({
            type: 'GET',
            url: '@Url.Action("Detail", "LevelUp")',
            data: { cardId : id },
            success: function (result) {
                $('#membershipCardDetailContent').html(result);
                $('#membershipCardDetail').modal('show');
            },
            error: function () {
                ShowMessage("Dynamic content load failed.", 1);
            }
        });
    }

    function InitDefaultAccDetail() {
        if( $("#defaultAccountName").val()!=null){
            @*var defaultAccId = @Model.DefaultAccount.AccountID;
            $("#defaultAccountId").val(defaultAccId);*@

            var defaultAccName = $("#defaultAccountName").val();
            if(defaultAccName == ''){
                defaultAccName = 'N/A';
            }
            $("#defaultAccountName2").html(defaultAccName);

            var defaultAccBalance =  $("#defaultAccountBalance").val();
            if(defaultAccBalance == ''){
                defaultAccBalance = '0';
            }
            $("#defaultAccountBalance2").html(defaultAccBalance.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ","));
        }
    }

    function initFirstTable() {
        $.ajax({
            type: 'GET',
            url: '@Url.Action("GetCustomerStoreHistoryData", "Customer")',
            data: { 'studentId': '@Model.Id', 'startTime': $('#sTime').val(), 'endTime': $('#eTime').val() },
            success: function (result) {
                if(!result.success) {
                    ShowMessage(result.message, 1);
                }

                InitCustomerStoreDatatable(result.data);
            },
            error: function(result) {
                ShowMessage("Có lỗi xảy ra!", 1);
            }
        });
    }

    // customer-store table
    function RefreshCustomerStoreTable() {
        var oTable = $("#customer-store-table").dataTable();
        oTable._fnPageChange(0);
        oTable._fnAjaxUpdate();
    }

    function InitCustomerStoreDatatable(data) {
        $("#customer-store-table").dataTable({
            "bFilter": true,
            "bRetrieve": false,
            "bScrollCollapse": true,
            "bSort": false,
            "data": data,
            "bDestroy": true,
            //"sAjaxSource": "/1/CRM/Customer/GetCustomerStoreData",
            "bProcessing": true,
            "bFilter": true,
            "aLengthMenu": [10, 20, 100],
            "iDisplayLength" : "10",
            "oLanguage": {
                "sSearchPlaceholder": "Cửa hàng",
                "sSearch": "Tìm kiếm:",
                "sZeroRecords": "Không có dữ liệu phù hợp",
                "sInfo": "Hiển thị từ _START_ đến _END_ trên tổng số _TOTAL_ dòng",
                "sEmptyTable": "Không có dữ liệu",
                "sInfoFiltered": " - lọc ra từ _MAX_ dòng",
                "sLengthMenu": "Hiển thị _MENU_ dòng",
                "sProcessing": "Đang xử lý...",
                "sInfoEmpty": "Không có dữ liệu",
                "oPaginate": {
                    "sNext": "<i class='fa fa-chevron-right'></i>",
                    "sPrevious": "<i class='fa fa-chevron-left'></i>"
                }
            },
            "aoColumnDefs": [
                 {
                     "aTargets": [0, 2, 3, 4, 5],
                     "className": "dt-center"
                 },
                 {
                     "aTargets": [3],
                     "bSortable": false,
                     "mRender": function (data, type, row) {
                         return '<span>' + toMoney(row[3], ',', '') + '</span>';
                     }
                 },
                 {
                     "aTargets": [4],
                     "bSortable": false,
                     "mRender": function (data, type, row) {
                         return '<span>' + toMoney((row[3] / row[2]), ',', '') + '</span>';
                     }
                 },
                 {
                     "aTargets": [5],
                     "bSortable": true,
                     "mRender": function (data, type, row) {
                         return '<span>' + (row[2] / row[4]).toFixed(2) + '</span>';
                     }
                 },
            ],
            "bAutoWidth": false
        });
    }

    //customer-product-table
    function RefreshCustomerProductTable() {
        var oTable = $("#customer-product-table").dataTable();
        oTable._fnPageChange(0);
        oTable._fnAjaxUpdate();
    }

    function InitCustomerProductDatatable() {
        $("#customer-product-table").dataTable({
            "bFilter": true,
            "bRetrieve": true,
            "bServerSide": true,
            "bScrollCollapse": true,
            "bSort": false,
            "fnServerParams": function (aoData) {
                aoData.push({ "name": "brandId", "value": '@ViewBag.brandId' });
                aoData.push({ "name": "customID", "value": '@Model.Id' });
                aoData.push({ "name": "selectedStoreID", "value":$('#selectedStore').val() });
                aoData.push({ "name": "startTime", "value":$('#sTime2').val() });
                aoData.push({ "name": "endTime", "value":$('#eTime2').val() });
            },
            //get customer product data
            "sAjaxSource": "@(Url.Action("LoadOrder", "Customer"))",
            //"sAjaxSource": "/1/CRM/Customer/GetCustomerProductData",
            "bProcessing": true,
            "bFilter": true,
            "aLengthMenu": [10, 20, 100],
            "iDisplayLength" : "10",
            "oLanguage": {
                "sSearchPlaceholder": "Mã hóa đơn",
                "sSearch": "Tìm kiếm: ",
                "sZeroRecords": "Không có dữ liệu phù hợp",
                "sInfo": "Hiển thị từ _START_ đến _END_ trên tổng số _TOTAL_ dòng",
                "sEmptyTable": "Không có dữ liệu",
                "sInfoFiltered": " - lọc ra từ _MAX_ dòng",
                "sLengthMenu": "Hiển thị _MENU_ dòng",
                "sProcessing": "Đang xử lý...",
                "sInfoEmpty": "Không có dữ liệu",
                "oPaginate": {
                    "sNext": "<i class='fa fa-chevron-right'></i>",
                    "sPrevious": "<i class='fa fa-chevron-left'></i>"
                }
            },
            "aoColumnDefs": [
              {
                  "aTargets": [0, 2, 3, 4, 5, 8],
                  "sClass": "text-center",
                  "bSearchable": false,
              },
              {
                  "aTargets": [1],
                  "bSearchable": true,
              },
              {
                  "aTargets": [3],
                  "bSearchable": false,
                  "mRender": function (data, type, row) {
                      //var money = o.aData[5];
                      var data = row[3];
                      return toMoney(data, ',', '');
                  }
              },
              {
                  "aTargets": [5],
                  "bSearchable": false,
                  "mRender": function (data, type, row) {
                      var status = "";
                      var color = "";
                      var colorS = "";
                      data = row[5];
                      status = row[8];

                      @*switch (data) {
                          case 4:
                              type = "@Resources.EnumLanguage.View_AtStore";
                              color = "<div class='label label-primary myCategory'>";
                              break;
                          case 5:
                              type = "@Resources.EnumLanguage.View_TakeAway";
                              color = "<div class='label label-success myCategory'>";
                              break;
                          case 6:
                              type = "@Resources.EnumLanguage.View_Delivery";
                              color = "<div class='label label-warning myCategory'>";
                              break;
                          case 1:
                              type = "@Resources.EnumLanguage.View_OnlineProduct";
                              color = "<div class='label label-warning myCategory'>";
                              break;
                          default:
                              type = "@Resources.EnumLanguage.Unknown";
                              color = "<div class='label label-default myCategory'>";
                      }*@

                      //return color + type + '</div></hr>' + colorS + status + '</div>';
                      return color + type + '</div>';
                  }
              },
              {
                  "aTargets": [6],
                  "bSearchable": false,
                  "mRender": function (data, type, row) {
                      var status = "";
                      var colorS = "";
                      var status = row[8];

                      @*switch (status) {
                          case 2:
                              status = "@Resources.EnumLanguage.View_Finish";
                              colorS = "<div class='label label-success myCategory'>";
                              break;
                          case 3:
                              status = "@Resources.EnumLanguage.View_Cancel";
                              colorS = "<div class='label label-warning myCategory'>";
                              break;
                          case 4:
                              status = "@Resources.EnumLanguage.View_PreCancel";
                              colorS = "<div class='label label-warning myCategory'>";
                              break;
                          case 8:
                              status = "@Resources.EnumLanguage.View_New";
                              colorS = "<div class='label label-primary myCategory'>";
                              break;
                          case 10:
                              status = "@Resources.EnumLanguage.View_Processing";
                              colorS = "<div class='label label-warning myCategory'>";
                              break;
                      }*@

                      return colorS + status + '</div>';
                  }
              },
              {
                  "aTargets": [7],
                  "bSearchable": false,
                  "mRender": function (data, type, row) {
                      var data = row[6];
                      return data;
                  }
              },
              {
                  "aTargets": [8],
                  "bSearchable": false,
                  "mRender": function (data, type, row) {
                      var data = row[7];
                      tester = row[13];
                      var btn = $('<a/>', {
                          'class': 'btn btn-sm btn-primary',
                          'html': $('<i/>', {
                              'class': 'glyphicon glyphicon-eye-open'
                          }),
                          'data-customer-name': row[9],
                          //'data-delivery-address': row[10],
                          //'data-customer-phone': row[11],
                          'data-invoiceid': row[1],
                          'data-cashier': row[6],
                          //'data-store': row[16],
                          'data-id': row[7],
                          'data-order-time': row[4],
                          'data-status': row[5],
                          'data-store-name': row[8],
                          //'data-notes': row[12],
                          //'data-total-amount': toMoney(row[13], ',', ''),
                          'data-final-amount': toMoney(row[3], ',', ''),
                          //'data-discount': toMoney(row[15], ',', ''),
                          'data-role': 'detail'
                      });
                      return btn[0].outerHTML;
                  }
              }

            ],
            "bAutoWidth": false
        });
    }

    $(document).on('click', '[data-role=detail]', function () {
        currentId = $(this).data('id');
        $("#RentID").val(currentId);
        finalamount = $(this).data('final-amount');
        $('#order-detail-report-modal [data-role=order-time]').html($(this).data('order-time'));
        $('#order-detail-report-modal [data-role=invoiceid]').html($(this).data('invoiceid'));
        $('#order-detail-report-modal [data-role=cashier]').html($(this).data('cashier'));
        $('#order-detail-report-modal').modal('show');
        
        @*switch ($(this).data('status')) {
            case 4:
                $('#order-detail-report-modal [data-role=status]').html("<div class='label label-primary myCategory'>@Resources.EnumLanguage.View_AtStore</div>")
                break;
            case 5:
                $('#order-detail-report-modal [data-role=status]').html("<div class='label label-success myCategory'>@Resources.EnumLanguage.View_TakeAway</div>")
                break;
            case 6:
                $('#order-detail-report-modal [data-role=status]').html("<div class='label label-warning myCategory'>@Resources.EnumLanguage.View_Delivery</div>")
                break;
        }*@
        $('#order-detail-report-modal [data-role=store-name]').html($(this).data('store-name'));
        if ($(this).data('status') == 6 || $(this).data('status') == 1) {
            $('#delivery').show();
        }
        else {
            $('#delivery').hide();
        }
        $.ajax({
            type: "GET",
            data: {"id": currentId},
            url: "@Url.Action("LoadOrderDetail")",
            dataType: "json",
            success: function(result){
                getOrderDetailsGeneralData(result.lblData)
                orderDetailTable(result.dataTable);
            },
            error: function(){
                ShowMessage("Có lỗi xảy ra", 1);
            }
        });

        //RefreshTableOrderDetail();
        //orderDetailTable._fnPageChange(0);
        //orderDetailTable._fnAjaxUpdate();
    });

    var getOrderDetailsGeneralData = function(data){
        totalamount = data.totalAmount;
        totaldiscount = data.totalDiscount * (-1);

        $('#order-detail-report-modal [data-role=customer-name]').html(data.cusName);
        $('#order-detail-report-modal [data-role=delivery-address]').html(data.cusAddr);
        $('#order-detail-report-modal [data-role=customer-phone]').html(data.cusPhone);

        $('#order-detail-report-modal [data-role=store]').html(data.store);
        $('#order-detail-report-modal [data-role=notes]').html(data.notes);
        $('#order-detail-report-modal [data-role=total-amount]').html(toMoney(totalamount, ',', ''));
        $('#order-detail-report-modal [data-role=discount]').html(toMoney(totaldiscount, ',', ''));

        var html = "";
        for(var i = 0; i < data.payment.length; i++){
            html += toMoney(data.payment[i].amount, ',', '') + " (" + data.payment[i].type + ")<br/>";
            $('#order-detail-report-modal [data-role=final-amount]').html(html);
        }

    }

    var orderDetailTable = function (data) {
        $('#order-report-detail-table').dataTable({
            "footerCallback": function (row, data, start, end, display) {
                var cells = row.getElementsByTagName('th');
                cells[0].innerHTML = "Tổng cộng: " + toMoney(totalamount, ',', '');
                cells[1].innerHTML = toMoney(totaldiscount, ',', '');
                cells[2].innerHTML = toMoney(finalamount, ',', '');
            },

            "bFilter": false,
            "bRetrieve": false,
            "bDestroy": true,
            "bServerSide": false,
            "bScrollCollapse": true,
            @*"sAjaxSource": "@Url.Action("LoadOrderDetail")",*@
            "bProcessing": true,
            //"fnServerParams": function (aoData) {
            //    aoData.push({ "name": "id", "value": currentId });
            //},
            "data": data,
            "oLanguage": {
                "sSearch": "Tên phòng:",
                "sZeroRecords": "Không có dữ liệu phù hợp",
                "sInfo": "Hiển thị từ _START_ đến _END_ trên tổng số _TOTAL_ dòng",
                "sEmptyTable": "Không có dữ liệu",
                "sInfoFiltered": " - lọc ra từ _MAX_ dòng",
                "sLengthMenu": "Hiển thị _MENU_ dòng",
                "sProcessing": "Đang xử lý...",
                "oPaginate": {
                    "sNext": "<i class='fa fa-chevron-right'></i>",
                    "sPrevious": "<i class='fa fa-chevron-left'></i>"
                }

            },
            "aoColumnDefs": [
                { "aTargets": [0, 1, 2, 3, 4, 5, 6], "bSortable": false },
                { "aTargets": [2, 3, 4, 5], "sClass": "text-center" },
                {
                    "aTargets": [2],
                    "mRender": function (data, type, row) {
                        //var money = o.aData[5];
                        var data = row[2];
                        return toMoney(data, ',', '');
                    }
                },
                {
                    "aTargets": [5],
                    "mRender": function (data, type, row) {
                        //var money = o.aData[5];
                        var data = row[5];
                        return toMoney(data, ',', '');
                    }
                },
                {
                    "aTargets": [6],
                    "mRender": function (data, type, row) {
                        //var money = o.aData[5];
                        var data = row[6];
                        return toMoney(data, ',', '');
                    }
                },
                {
                    "aTargets": [7],
                    "sClass": "hidden",
                },
                {
                    "aTargets": [4],
                    "mRender": function (data, type, row) {
                        var type = "";
                        var color = "";
                        data = row[4];
                        @*switch (data) {
                            case 11:
                                type = "@Resources.EnumLanguage.View_PosFinished";
                                color = "<div class='label label-success myCategory'>";
                                break;
                            case 12:
                                type = "@Resources.EnumLanguage.View_PosPreCancel";
                                color = "<div class='label label-warning myCategory'>";
                                break;
                            case 13:
                                type = "@Resources.EnumLanguage.View_PosCancel";
                                color = "<div class='label label-warning myCategory'>";
                                break;
                            default:
                                type = "---";
                                color = "<div>";

                        }*@
                        return color + type + '</div>';
                    }

                },
            ],
            "bAutoWidth": false
        }).fnSetFilteringDelay(delaySearch);
    };


   
    //load overview
    function loadStoreOverview() {
        $.ajax({
            url: '@Url.Action("StoreOverview")',
            data: {
                Id: @this.Model.Id,
            },
            type: "POST",
            success: function (result) {
                if (result != null) {
                    $('#1stPanel-title').html('Tổng số đơn hàng');
                    if(result.totalOrder == ''){
                        result.totalOrder = '0';
                    }
                    $('#1stPanel-info').html('<i class="fa fa-shopping-bag detailPanelIcon"></i></h4> <h4 style="color:white;"><span class="detailPanelInfo">'+result.totalOrder+'</span>');

                    $('#2ndPanel-title').html('Tổng tiền đã chi');
                    if(result.totalAmount == ''){
                        result.totalAmount = '0';
                    }
                    $('#2ndPanel-info').html('<i class="fa fa-money detailPanelIcon"></i></h4> <h4 style="color:white"><span class="detailPanelInfo">'+result.totalAmount+'</span>');

                    $('#3rdPanel-title').html('Tổng số lần đến');
                    if(result.totalFrequency == ''){
                        result.totalFrequency = '0';
                    }
                    $('#3rdPanel-info').html('<i class="fa fa-user-plus detailPanelIcon"></i></h4> <h4 style="color:white"><span class="detailPanelInfo">'+result.totalFrequency+'</span>');

                    //result.totalAmount;
                    //result.totalFrequency;
                }
            },
            error: function (error) {
                ShowMessage("Có lỗi xảy ra. Xin liên hệ admin", 1);
            }
        });
    }
    function loadTransactionOverview() {
        $.ajax({
            url: '@Url.Action("TransactionOverview")',
            data: {
                Id: @this.Model.Id,
            },
            type: "POST",
            success: function (result) {
                if (result != null) {
                    $('#1stPanel-title').html('Số giao dịch tăng');
                    if(result.totalIncrease == ''){
                        result.totalIncrease = '0';
                    }
                    $('#1stPanel-info').html('<i class="fa fa-level-up detailPanelIcon"></i></h4> <h4 style="color:white;"><span class="detailPanelInfo">'+result.totalIncrease+'</span>');

                    $('#2ndPanel-title').html('Số giao dịch giảm');
                    if(result.totalDecrease == ''){
                        result.totalDecrease = '0';
                    }
                    $('#2ndPanel-info').html('<i class="fa fa-level-down detailPanelIcon"></i></h4> <h4 style="color:white"><span class="detailPanelInfo">'+result.totalDecrease+'</span>');
                    $('#3rdPanel-title').html('Tổng số dư các tài khoản');
                    if(result.totalBalance == ''){
                        result.totalBalance = '0';
                    }
                    $('#3rdPanel-info').html('<i class="fa fa-credit-card detailPanelIcon"></i></h4> <div style="margin-right:-3px"><h4 style="color:white"><span class="accountBalance">Số dư: '
                        +result.totalBalance+'</span></br><span class="accountBalance">Sản phẩm: '
                        +result.totalProduct+'</span></br><span class="accountBalance">Điểm: '
                        +result.totalPoint+'</span></div>');

                }
            },
            error: function (error) {
                ShowMessage("Có lỗi xảy ra. Xin liên hệ admin",1);
            }
        });
    }


    function setModalHeaderWidth() {
        //set width
        $('#fixedHeader').css('width', $('#modal-dialog').width() + "px");
        $(window).resize(function () {
            $('#fixedHeader').css('width', $('#modal-dialog').width() + "px");
        });
    }

    
    $('#showCreateTransaction').click(function(){
        $.ajax({
            type: "GET",
            url : '@Url.Action("Create", "Transaction")',
            data: {
                Id: @Model.Id,
            },
            success: function (result) {
                $('#createTransactionPanel').html(result);
                $('#createTransactionPanel').modal('show');
                setModalHeaderWidth();
            },
            error: function (error) {
                ShowMessage("Error Occured",1)
            }
        });
    });

    function showEditTransaction(transactionId) {
        $.ajax({
            type: "GET",
            url: '@(Url.Action("Edit", "Transaction"))',
            data: {
                Id: transactionId
            },
            success: function (result) {
                $('#editTransactionPanel').html(result);
                $('#editTransactionPanel').modal('show');
                setModalHeaderWidth();
            },
            error: function (error) {
                ShowMessage("Error Occured",1);
            }
        });
    }

    @*function deleteTransaction(transactionId) {
        if (confirm("Bạn có muốn xóa giao dịch này?")) {
            $.ajax({
                type: 'URL',
                url: '@Url.Action("Delete","Transaction")',
                method: 'POST',
                data: { Id: transactionId },
                success: function (result) {
                    if (result.success) {
                        ShowMessage("Xóa thành công!");
                        location.href = '@Url.Action("Voucher",new {ID = Model.Id })',
                        RefresVoucherTable();
                    } else {
                        ShowMessage("Xóa không thành công, xin thử lại sau");
                    }
                },
                error: function (error) {
                    ShowMessage("Xóa không thành công, xin thử lại sau");
                }
            });
        }
    }*@

    function RefreshCustomerAccountTable() {
        var oTable = $("#customer-account-table").dataTable();
        //RefreshTable("#customer-account-table", "@Url.Action("GetCustomerAccountData", "Account")");
        //oTable.api().ajax.reload();
        //oTable.fnClearTable();
        //oTable.fnDraw();
        //oTable.api().ajax.reload();
        oTable._fnPageChange(0);
        oTable._fnAjaxUpdate();
    }

    function InitCustomerAccountDatatable() {
        $("#customer-account-table").dataTable({
            "bRetrieve": true,
            "bServerSide": true,
            "bScrollCollapse": true,
            "bSort": false,
            "fnServerParams": function (aoData) {
                aoData.push({ "name": "Id", "value": '@Model.Id' });
                aoData.push({ "name": "modeSelect", "value": $("#selectAccountMode").val()});
                aoData.push({ "name": "modeItemSelect", "value": $("#selectModeItem").val()});
            },
            "sAjaxSource": "@Url.Action("GetCustomerAccountData", "Account")",
            "bProcessing": true,
            "aLengthMenu": [10, 20, 100],
            "oLanguage": {
                "sSearchPlaceholder":"Tên tài khoản",
                "sSearch": "Tìm kiếm:",
                "sZeroRecords": "Không có dữ liệu phù hợp",
                "sInfo": "Hiển thị từ _START_ đến _END_ trên tổng số _TOTAL_ dòng",
                "sEmptyTable": "Không có dữ liệu",
                "sInfoFiltered": " - lọc ra từ _MAX_ dòng",
                "sLengthMenu": "Hiển thị _MENU_ dòng",
                "sProcessing": "Đang xử lý...",
                "sInfoEmpty": "Không có dữ liệu",
                "oPaginate": {
                    "sNext": "<i class='fa fa-chevron-right'></i>",
                    "sPrevious": "<i class='fa fa-chevron-left'></i>"
                }
            },
            "aoColumnDefs": [
                 {
                     "aTargets": [0, 1, 3, 4, 5],
                     "className": "dt-center",
                     "sClass": "text-center"
                 },
                {
                    "aTargets": [2],
                    "mRender": function (data, type, row, meta) {
                        var data = row[2];
                        var selectedRowIndex = meta.row;

                        return '<a style="cursor: pointer" onclick="changeAccountDetailInfo(' + selectedRowIndex + ')">' + data + '</a>';
                    },
                },

                @*{
                    "aTargets": [3],
                    "mRender": function (data, type, row, meta) {
                        var data = row[3];
                        if (('@this.Model.AccountID.HasValue')) {
                            if (data == $("#defaultAccountId").val()) {
                                return '<div title="Tài khoản mặc định" class="btn btn-sm btn-outline btn-success"><i class="glyphicon glyphicon-ok"></i></div>';
                            }
                            else {
                                return '<a title="Thiết lập tài khoản mặc định" href="javascript:setDefaultAccount(' + data + ',' + meta.row + ')" class="btn btn-sm btn-outline"><i class="zmdi zmdi-minus-circle" style="visibility: hidden"></i></a>';
                            }
                        }
                        else {
                            return '<a title="Thiết lập tài khoản mặc định" href="javascript:setDefaultAccount(' + data + ',' + meta.row + ')" class="btn btn-sm btn-outline"><i class="zmdi zmdi-minus-circle" style="visibility: hidden"></i></a>';
                        }
                    },
                    "bSortable": false,
                },*@
                {
                    "aTargets": [3],
                    "mRender": function (data, type, row) {
                        var type = "";
                        var color = "";
                        data = row[3];
                        switch (data) {
                            case 1:
                                type = "Tài khoản thanh toán";
                                color = "<span class='label  meStatus label-success'>";
                                break;
                            case 2:
                                type = "Tài khoản sản phẩm";
                                color = "<span class='label  meStatus label-primary'>";
                                break;
                            case 3:
                                @*type = "@AccountTypeEnum.PointAccount";*@
                                type = "Tài khoản tích điểm";
                                color = "<span class='label  meStatus label-warning'>";
                                break;
                            default:
                                type = "---";
                                color = "<a>";

                        }
                        return color + type + '</a>';
                    }

                },

                {
                    "aTargets": [5],
                    "mRender": function (data, type, row){
                        var data = row[5];
                        var activated = row[6];
                        var activationToggle = '';
                        var checked = '';
                        var disabled = '';
                        var title = '';
                        if (data == $("#defaultAccountId").val()) {
                            title = 'title="Không thể vô hiệu hóa tài khoản mặc định"';
                            disabled = 'disabled';
                        }
                        if(activated){
                            checked = 'checked';

                        }

                        activationToggle = '<div class="form-group">'
                                            + '<div class="toggle-switch '+ disabled +' col-md-12" data-ts-color="green"'+ title +'>'
                                            + '<input id="'+data+'" onchange="ActivationToggle(' + data + ','+ activated +')" '+checked+' type="checkbox" hidden="hidden" />'
                                            + '<label for="'+data+'" class="ts-helper"></label></div></div>';

                        //if(activated == true){
                        //activationToggle = '<a href="javascript:ActivationToggle(' + data + ','+ activated +')" class="btn btn-sm btn-danger">Vô hiệu hóa TK</a>';

                        //} else {
                        //    activationToggle = '<a href="javascript:ActivationToggle(' + data + ','+ activated +')" class="btn btn-sm btn-success">Tái kích hoạt TK</a>';



                        return activationToggle;
                    },
                    "fnCreatedCell": function (nTd, sData, oData, iRow, iCol) {
                        if (sData == false) {
                            $(nTd).parent().css('background-color', '#f6f6f6');
                            $(nTd).parent().css('color', '#a7a7a7');
                        }
                    },
                    "bSortable": false,


                },

                {
                    "aTargets": [6],
                    "mRender": function (data, type, row) {
                        var data = row[4];
                        var type = row[3]; //Loại tài khoản
                        var detail = "<a title='Chi tiết' href='javascript:viewAccountTransactionDetail(" + data + ")' class='btn btn-sm btn-info'><i class='glyphicon glyphicon-info-sign'></i></a>"

                        var edit = "<a title='Chỉnh sửa' href='@Url.Action("Edit", "Account")/"+data+"' class='btn btn-sm btn-primary'><i class='glyphicon glyphicon-pencil'></i></a>"

                        //1 là Tài khoản thanh toán
                        if (type==1) {
                            var addBalance = "<a title='Thêm vào tài khoản' onclick='showAddBalance(" + data + ")' class='btn btn-sm btn-success'><i class='glyphicon glyphicon-usd'></i></a>"
                            return addBalance+ ' '+ detail  + ' ' + edit;
                        } else {
                            return detail  + ' ' + edit;
                        }

                    },
                    "bSortable": false,

                }
            ],
            "bAutoWidth": false
        }).fnSetFilteringDelay(800);
    }

    function showAddBalance(accountId) {
        $.ajax({
            type: "GET",
            url: '@(Url.Action("CreateByAccountId", "Transaction"))',
            data: {
                Id: accountId
            },
            success: function (result) {
                $('#addBalanceModal').html(result);
                $('#addBalanceModal').modal('show');
                setModalHeaderWidth();
            },
            error: function (error) {
                ShowMessage("Error Occured",1);
            }
        });
    }


    @*$("#showCreateAccount").click(function() {
        $('#createAccountPanel').modal('show');
        $.ajax({
            type: "GET",
            url: '@Url.Action("Create", "Account")',
            data: {
                Id: @Model.CustomerID,
            },
            success: function (result) {
                $('#createAccountPanel').html(result);
                RefreshCustomerAccountTable();
                setModalHeaderWidth();
            },
            error: function (error) {
                ShowMessage("Error Occured",1);
            }
        });
    });*@
    @*$("#showCreateAccount2").click(function() {
        //$('#createAccountPanel').modal('show');
        $.ajax({
            type: "GET",
            url: '@Url.Action("Create", "Account")',
            data: {
                Id: @Model.CustomerID,
            },
            success: function (result) {
                //$('#createAccountPanel').html(result);
                //RefreshCustomerAccountTable();
                //setModalHeaderWidth();
            },
            error: function (error) {
                ShowMessage("Error Occured",1);
            }
        });
    });*@

    @*function showEditAccountPanel(accountId) {
        $('#editAccountPanel').modal('show');
        $.ajax({
            type: "GET",
            url: '@Url.Action("Edit", "Account")',
            data: {
                Id: accountId,
            },
            success: function (result) {
                $('#editAccountPanel').html(result);
                setModalHeaderWidth();
            },
            error: function (error) {
                ShowMessage("Error Occured",1);
            }
        });
    }*@

    function setDefaultAccount(id, rowIndex) {
        $.ajax({
            type: "POST",
            url: '@Url.Action("SetDefaultAccountWithId", "Customer")',
            data: {
                Id: id,
            },
            success: function (result) {
                $("#defaultAccountId").val(result.detail.accID);
                $("#defaultAccountName2").html(result.detail.accName);
                $("#defaultAccountBalance2").html(result.detail.balance);
                RefreshCustomerAccountTable();
                ShowMessage("Thay đổi tài khoản mặc định thành công", 2);
            },
            error: function (error) {
                ShowMessage("Error Occured",1);
            }
        });

        setTimeout(function(){
            changeAccountDetailInfo(rowIndex);
        }, 750);
    }

    function viewAccountTransactionDetail(accountId) {
        // Chuyển qua tab "Danh sách giao dịch".
        activateTab("transactions");

        // Chọn tài khoản khách hàng
        $('#selectedAccount').val(accountId);
        $('#selectedAccount').selectpicker('refresh');

        // Reload lại datatable của "Danh sách giao dịch".
        RefresTransactionTable();
    }

    function activateTab(tab) {
        $('.tab-nav li a[href="#' + tab + '"]').tab('show');
    }
    function changePanelContent(tab){
        if(tab==1){
            loadStoreOverview();
        }else{
            loadTransactionOverview();
        }
    }
    function setupDaterangepicker2() {
        cb2(moment().startOf('month'), moment(), "Tháng này");
        $('#reportrange2').daterangepicker({
            "opens": "left",
            "maxDate": moment(),
            locale: {
                format: 'DD/MM/YYYY'
            },
            ranges: {
                'Tuần này': [moment().startOf('week'), moment().endOf('week')],
                'Tuần trước': [moment().subtract(1, 'week').startOf('week'), moment().subtract(1, 'week').endOf('week')],
                'Tháng này': [moment().startOf('month'), moment().endOf('month')],
                'Tháng trước': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
            }

        }, cb2);
        loadStoreListFilter();
    }
    //$('#date-string2').on('change',function(){
    //    debugger
        
    //});
    $('#boughtHistory').one('click',function(){
        setupDaterangepicker2();
    });

    
    function getProductForAccountDetail(code){
        $.ajax({
            type: 'POST',
            url:'@Url.Action("GetProductForAccountDetail", "Account")',
            data: {
                Code: code,
            },
            success: function (result) {
                if(result.success==true){
                    $('#accountDetailProduct').val(result.ProductName)
                }
            },
            error: function (error) {
                ShowMessage("Có lỗi xảy ra.",1);
            }
        });
    }
    function changeAccountDetailInfo(rowIndex) {
        //RefreshCustomerAccountTable();
        // $("#customer-account-table").dataTable().api().rows(0).data()[0][1]
        var oTable = $("#customer-account-table").dataTable();
        var rowData = oTable.api().rows(rowIndex).data()[0];
        var type = "";
        switch (rowData[3]) {
            case 1:
                type = "Tài khoản thanh toán";
                $("#balanceLabel").html('<strong>Số dư:</strong>');
                $('#productInput').hide();
                if (rowData[9] =="" || rowData[9] == null) {
                    $("#accountDetailBalance").val("N/A");
                }
                else{
                    $("#accountDetailBalance").val(rowData[9]);
                }
                break;
            case 2:
                type = "Tài khoản sản phẩm";
                $("#balanceLabel").html('<strong>Số lượng sản phẩm:</strong>');
                getProductForAccountDetail(rowData[8]);
                $('#productInput').show();
                if (rowData[9] =="" || rowData[9] == null) {
                    $("#accountDetailBalance").val("N/A");
                }
                else{
                    $("#accountDetailBalance").val(rowData[9]);
                }
                break;
            case 3:
                type = "Tài khoản tích điểm";
                $("#balanceLabel").html('<strong>Số điểm:</strong>');
                $('#productInput').hide();
                if (rowData[9] =="" || rowData[9] == null) {
                    $("#accountDetailBalance").val("N/A");
                }
                else{
                    $("#accountDetailBalance").val(rowData[9]);
                }
                break;
            default:
                $('#accountDetailProduct').hide();
                type = "---";

        }
        $('#accountDetailType').val(type);
        $("#accountDetailName").val(rowData[2]);
        $('#accountDetailCode').val(rowData[1]);
        if(rowData[6]==true)
            $('#accountDetailActive').val('Có');
        else{
            $('#accountDetailActive').val('Không');
        }
        if (rowData[7] != null) {
            var date = convertNETDateTime(rowData[7]);
            var finishDate = date.getDate() + '/' + (date.getMonth() + 1) + '/' + date.getFullYear();
            $("#accountDetailFD").val(finishDate);
        } else {
            $("#accountDetailFD").val('N/A');
        }

        if (rowData[4] != null) {
            $("#accountDetailCard").val(rowData[4]);
        }

        //$('html,body').scrollTop(0);
        //$('html,body').animate({ scrollTop: 0 }, 'slow');
        $('#accountDetailModalTitle').html('<i class="fa fa-user"></i> Thông tin tài khoản');
        $("#accountDetailModal").modal("show");
    }
    $(document).on('click', '#exportEx', function () {
        $('#storeId').val($('#listStoreId').val());
        $('#formDetailReportExcel').submit();
    });

    function convertNETDateTime(sNetDate) {
        if (sNetDate == null) return null;
        if (sNetDate instanceof Date) return sNetDate;
        var r = /\/Date\(([0-9]+)\)\//i
        var matches = sNetDate.match(r);
        if (matches.length == 2) {
            return new Date(parseInt(matches[1]));
        }
        else {
            return sNetDate;
        }
    }
    function loadStoreListFilter(){
        $.ajax({
            type: "POST",
            url: "@Url.Action("LoadStoreFromCustomerOrder", "Customer")",
            data: {
                studentId: '@Model.Id',
            },
            success: function (result) {
                for (var i=0; i< result.list.length;i++)
                {
                    $('#selectedStore').append("<option value="+result.list[i].storeID+">"+result.list[i].storeName+"</option>");
                }
                $('#selectedStore').selectpicker('refresh');
                //ShowMessage("Thành công.", 2);
                InitCustomerProductDatatable();
            },
            error: function (error) {
                ShowMessage("Có lỗi xảy ra.",1);
            }
        });
    }

    
   
    function ChangeModeItemSelect(itemValue, itemName) {
        $('#btn-selectModeItem').html(itemName + " &#9660");
        $('#selectModeItem').val(itemValue);
        RefreshCustomerAccountTable();
    }
</script>
<style>
    .btn-outline {
        background-color: transparent;
        color: inherit;
        border-radius: 5px;
    }

    .btn-primary.btn-outline {
        color: #428bca;
    }

    .btn-success.btn-outline {
        color: #5cb85c;
    }

    .btn-info.btn-outline {
        color: #5bc0de;
    }

    .btn-warning.btn-outline {
        color: #f0ad4e;
    }

    .btn-danger.btn-outline {
        color: #d9534f;
    }
        .btn-primary.btn-outline:hover,
        .btn-success.btn-outline:hover,
        .btn-info.btn-outline:hover,
        .btn-warning.btn-outline:hover,
        .btn-danger.btn-outline:hover {
            background-color: transparent;
        }

    .btn.btn-outline:hover {
        border-color: #5cb85c;
    }

    .btn.btn-outline:focus {
        border-color: #5cb85c;
    }

    .card-body {
        background-color: white;
    }
    .accountBalance{
        float:right; padding-right: 10px; font-size:15px
    }
    .tab-nav.tn-justified > li{
        width:1%!important;
    }
    .fg-line > #reportrange2 > input {
        height:37px;
        width: 100%;
        padding-left: 0;
    }
    .myCategory {
        display: inline-block;
    }
    .no-padding {
        padding: 0;
    }
    .modal-large{
        min-width: 700px;
    }
</style>
