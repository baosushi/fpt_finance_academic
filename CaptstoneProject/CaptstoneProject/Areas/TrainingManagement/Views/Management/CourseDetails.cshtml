@model CaptstoneProject.Models.AreaViewModel.CourseDetailsViewModel
@{
    ViewBag.Title = ViewBag.ClassName;
}
<style>
    .course-detail-info {
        font-size: 14px;
        padding-left: 20px;
        padding-bottom: 15px;
    }
</style>


<div class="content">
    <!-- Start Container -->
    <div class="container-default animated fadeInRight" style="padding-bottom:10px; min-height:700px">
        <div class="panel panel-default">
            @*<div>
                    <a href="" class="btn btn-success btn-lg">
                        <span class="glyphicon glyphicon-export"></span>Export
                    </a>
                </div>*@
            <div class="panel-title"><i class="fa fa-user" style="color:green"></i> Course Details </div>
            <div class="panel-body">
                <div class="course-detail-info">
                    <label><b>Term:</b> @Model.Semester</label>
                    <label style="padding-left: 60px;"><b>Subject:</b> @Model.SubName - @Model.SubCode</label>
                    <br />
                    <label><b>Class:</b> @ViewBag.ClassName</label>
                </div>
                @if (Model.isEditable)
                {
                    <div class="row">
                        <div class="offset-8 col-md-4">
                            <div class="pull-right">
                                <button class="btn-success btn" id="download-template-btn">Download Template</button>

                                <button class="btn-primary btn" title="Import Final Exam using Excel" id="import-mark-btn">Import FE</button>
                                <input id="upload-file" class="hidden" type="file" name="upload-file" />
                                <div class="progress" style="display:none">
                                    <div id="upload-progress-bar" class="progress-bar progress-bar-striped active" role="progressbar"
                                         aria-valuenow="50" aria-valuemin="0" aria-valuemax="100" style="width:0%">

                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>
                    <br />

                    <div class="row">
                        <div class="offset-10 col-md-2">
                            <button id="submit-button" class="btn btn-primary pull-right disabled" disabled="disabled">Waitting for file</button>
                        </div>
                    </div>
                    <br />
                }
                <table id="mark-table" class="table display dataTable table-responsive">
                    <thead>
                        <tr>
                            <th>
                                #
                            </th>
                            <th>
                                Login Name
                            </th>
                            <th>
                                Student Code
                            </th>
                            @foreach (var name in Model.ComponentNames)
                            {
                                <th>
                                    @name
                                </th>
                            }
                            <th>
                                Average
                            </th>
                            <th>
                                Status
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 1; i <= Model.StudentInCourse.Count; i++)
                        {
                            <tr>
                                <td>
                                    @i
                                </td>
                                <td>
                                    @if (Model.isEditable)
                                    {

                                        <a href="@Url.Action("EditMarks", "Management", new { studentCode = Model.StudentInCourse[i - 1].StudentCode, courseId = Model.CourseId })">@Model.StudentInCourse[i - 1].UserName</a>
                                    }
                                    else
                                    {
                                        <div>
                                            @Model.StudentInCourse[i - 1].UserName
                                        </div>
                                    }
                                </td>
                                <td>
                                    @Model.StudentInCourse[i - 1].StudentCode
                                </td>
                                @foreach (var mark in Model.StudentInCourse[i - 1].MarksComponent)
                                {
                                    if (mark.Mark != null)
                                    {
                                        <td>
                                            @mark.Mark
                                        </td>
                                    }
                                    else
                                    {
                                        <td>
                                            N/A
                                        </td>
                                    }
                                }
                                <td>
                                    @Model.StudentInCourse[i - 1].Average
                                </td>
                                <td>
                                    @Model.StudentInCourse[i - 1].Status
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<form class="hidden" method="post" id="template-request-form" action="@Url.Action("DownloadTemplate")">
    <input type="text" name="courseId" value="@Model.CourseId" />
</form>

<script>
    $('#download-template-btn').click(function () {
        $('#template-request-form').submit();
    });

    $('#import-mark-btn').click(function () {
        $('#upload-file').trigger("click");
    });

    $('#upload-file').on("change", function () {
        var fileName = this.files[0].name;
        $("#filename").html(fileName);

        if (fileName != null) {
            $('#submit-button').removeAttr("disabled");
            $('#submit-button').addClass("active");
            $('#submit-button').removeClass("disabled");
            $('#submit-button').html('Ready to submit!')
        } else {
            $('#submit-button').attr("disabled", "disabled");
            $('#submit-button').addClass("disabled");
            $('#submit-button').removeClass("active");
            $('#icon-upload').removeClass('fa-check-circle');
            $('#icon-upload').addClass('fa-times-circle');
            $('#submit-button').html('Waitting for file')
        }
    });

    $('#submit-button').on("click", function () {
        var file = $("#upload-file")[0].files[0];

        if (file.size > 20971520) {
            toastr.error('Max upload size is 20MB!');
        }
        else{
            var data = new FormData();
            data.append("courseId", @Model.CourseId);
            for (var i = 0; i < $("#upload-file")[0].files.length; i++) {
                data.append("file" + i, $("#upload-file")[0].files[i]);
            }
            $(".progress").show();
            $.ajax({
                type: "POST",
                url: '@Url.Action("UploadFinalExamExcel")',
                contentType: false,
                processData: false,
                data: data,
                xhr: function() {
                    var settingXhr = $.ajaxSettings.xhr();
                    if (settingXhr.upload) {
                        // For handling the progress of the upload
                        settingXhr.upload.addEventListener('progress', function(e) {
                            if (e.lengthComputable) {
                                $('#upload-progress-bar').removeClass('progress-bar-danger');
                                var percent = Math.ceil(e.loaded/e.total*100);
                                $('#upload-progress-bar').attr('aria-valuenow', percent).css('width',percent+'%');
                                $('#upload-progress-bar').attr('aria-valuemax', 100);
                                $('#upload-progress-bar').html(percent+"%");
                                if(percent==100){
                                    $('#upload-progress-bar').html("Processing...");
                                }
                            }
                        } , false);
                    }
                    return settingXhr;
                },
                success: function (result) {
                    if (result.success) {
                        toastr.success(result.message);
                        $('#upload-progress-bar').html("Completed!");
                        window.location.reload();

                    } else {
                        toastr.error(result.message);
                        $('#upload-progress-bar').html("Fail to upload!");
                        $('#upload-progress-bar').addClass('progress-bar-danger');
                    }
                },
                error: function (xhr, status, p3, p4) {
                    var err = "Error " + " " + status + " " + p3 + " " + p4;
                    toastr.error(err);
                    $('#upload-progress-bar').html("Fail to upload!");
                    $('#upload-progress-bar').addClass('progress-bar-danger');
                }
            });
        }
    });

    $(document).ready(function () {
        $('#mark-table').DataTable({
            "searching": true
        });

    });
</script>